{
  "C:\\Users\\dylan\\Documents\\repos\\apollo-server-guide": {
    "versionSfCore": null,
    "versionFramework": "4.1.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "C:\\Users\\dylan\\Documents\\repos\\apollo-server-guide",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "dylancoapolloserver",
      "app": "my-server2",
      "service": "apollo-lambda",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "httpApi": {
          "cors": true
        },
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "GraphqlLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/apollo-lambda-dev-graphql"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "apollo-lambda",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/apollo-lambda-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/apollo-lambda-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "apollo-lambda",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        }
      },
      "functions": {
        "graphql": {
          "handler": "src/server.graphqlHandler",
          "events": [
            {
              "httpApi": {
                "path": "/",
                "method": "POST"
              }
            },
            {
              "httpApi": {
                "path": "/",
                "method": "GET"
              }
            }
          ],
          "name": "apollo-lambda-dev-graphql",
          "package": {
            "exclude": [
              "node_modules/serverless-plugin-typescript"
            ],
            "include": [],
            "patterns": []
          }
        }
      },
      "build": {
        "esbuild": false
      },
      "plugins": [
        "serverless-plugin-typescript",
        "serverless-offline"
      ]
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\r\norg: dylancoapolloserver\r\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\r\napp: my-server2\r\nservice: apollo-lambda\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  httpApi:\r\n    cors: true\r\nfunctions:\r\n  graphql:\r\n    # Make sure your file path is correct!\r\n    # (e.g., if your file is in the root folder use server.graphqlHandler )\r\n    # The format is: <FILENAME>.<HANDLER>\r\n    handler: src/server.graphqlHandler # highlight-line\r\n    events:\r\n      - httpApi:\r\n          path: /\r\n          method: POST\r\n      - httpApi:\r\n          path: /\r\n          method: GET\r\n# Omit the following lines if you aren't using TS!\r\nbuild:\r\n  esbuild: false\r\nplugins:\r\n  - serverless-plugin-typescript\r\n  - serverless-offline\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "Cannot read file node_modules\\es-abstract\\2019\\ArraySpeciesCreate.js due to: EMFILE: too many open files, open 'C:\\Users\\dylan\\Documents\\repos\\apollo-server-guide\\.build\\node_modules\\es-abstract\\2019\\ArraySpeciesCreate.js'",
      "stack": "ServerlessError2: Cannot read file node_modules\\es-abstract\\2019\\ArraySpeciesCreate.js due to: EMFILE: too many open files, open 'C:\\Users\\dylan\\Documents\\repos\\apollo-server-guide\\.build\\node_modules\\es-abstract\\2019\\ArraySpeciesCreate.js'\n    at file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:792:26637\n    at tryCatcher (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:374:81933)\n    at Promise2._settlePromiseFromHandler (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:552:10136)\n    at Promise2._settlePromise (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:552:11455)\n    at Promise2._settlePromise0 (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:552:12512)\n    at Promise2._settlePromises (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:552:14108)\n    at _drainQueueStep (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:381:583)\n    at _drainQueue (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:381:479)\n    at Async._drainQueues (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:381:716)\n    at Async.drainQueues [as _onImmediate] (file:///C:/Users/dylan/.serverless/releases/4.1.4/package/dist/sf-core.js:377:3278)\n    at process.processImmediate (node:internal/timers:478:21)",
      "code": "CANNOT_READ_FILE"
    },
    "params": {},
    "machineId": "498d420b7a1362bdcd053e8e54659d7b",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "0342fbac-d1db-45c2-9b19-0fe418e3729b",
    "orgName": "dylancoapolloserver",
    "userId": "xHzCK0CP3cShKml1xh",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "sglfH3CfF9GYl2NfVT",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>"
      },
      "instanceParameters": null
    },
    "userName": "dylancoapolloserver",
    "subscription": null,
    "userEmail": "dylan.whitehouse22@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "590183842967",
    "versionSf": "4.1.4",
    "serviceProviderAwsCfStackName": "apollo-lambda-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:590183842967:stack/apollo-lambda-dev/520d1400-2986-11ef-9aff-0afff64c9fab",
    "serviceProviderAwsCfStackCreated": "2024-06-13T13:10:35.162Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-15T04:52:07.334Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GraphqlLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:590183842967:function:apollo-lambda-dev-graphql:12",
        "Description": "Current Lambda function version",
        "ExportName": "sls-apollo-lambda-dev-GraphqlLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "55ksxdqcra",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-apollo-lambda-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "apollo-lambda-dev-serverlessdeploymentbucket-vem35y7vwpdk",
        "ExportName": "sls-apollo-lambda-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://55ksxdqcra.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-apollo-lambda-dev-HttpApiUrl"
      }
    ]
  }
}